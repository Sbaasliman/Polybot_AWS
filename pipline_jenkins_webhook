pipeline {
    agent any

    environment {
        // Define environment variables
        REGISTRY_URL = "933060838752.dkr.ecr.eu-central-1.amazonaws.com"
    }

    stages {
        stage('Build') {
            steps {
                // Checkout code from GitHub repository with the main branch
                git branch: 'main', credentialsId: 'gitrepo', url: 'https://github.com/Sbaasliman/Polybot_AWS.git'
            }
        }

        stage('Configure AWS') {
            steps {
                // Configure AWS CLI
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'aws-credentials',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh """
                        aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
                        aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
                        aws configure set default.region eu-central-1
                    """
                }
            }
        }

        stage('Push') {
            steps {
                // Authenticate with ECR
                script {
                    sh "aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${REGISTRY_URL}"
                }

                // Push the Docker image to ECR
                script {
                    sh "docker build -t ${REGISTRY_URL}/ploybot_sabaa2:latest ./Polybot"
                    sh "docker push ${REGISTRY_URL}/ploybot_sabaa2:latest"
                }
            }
        }

        stage('Deploy') {
            steps {
                // SSH into EC2 instances and perform deployment
                // SSH into first EC2 instance and execute Docker run command
                withCredentials([
                    sshUserPrivateKey(
                        credentialsId: 'EC2key',
                        keyFileVariable: 'SSH_KEY',
                        passphraseVariable: '',
                        usernameVariable: 'SSH_USER'
                    )
                ]) {
                    // Inside this block, you can use the credentials securely
                    script {
                        sh '''
                        # Retrieve ECR authentication token locally
                        AWS_PASSWORD=$(aws ecr get-login-password --region eu-central-1)
                        # SSH into the first EC2 instance
                        ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" "$SSH_USER@3.122.97.91" "
                            # Log in to ECR
                            echo $AWS_PASSWORD | docker login --username AWS --password-stdin 933060838752.dkr.ecr.eu-central-1.amazonaws.com
                            # Stop and remove the existing container
                            docker stop polybot && docker rm polybot;
                            # Pull the latest image
                            docker pull 933060838752.dkr.ecr.eu-central-1.amazonaws.com/ploybot_sabaa2:latest
                            # Run the container in detached mode
                            sudo docker run -d -p 8443:8443 --name polybot -v ~/.aws/:/root/.aws/:ro -v /home/ec2-user/PUBLIC.pem:/app/PUBLIC.pem 933060838752.dkr.ecr.eu-central-1.amazonaws.com/ploybot_sabaa2:latest
                        "
                        '''
                    }
                }

                // SSH into second EC2 instance and execute Docker run command
                withCredentials([
                    sshUserPrivateKey(
                        credentialsId: 'EC2key',
                        keyFileVariable: 'SSH_KEY',
                        passphraseVariable: '',
                        usernameVariable: 'SSH_USER'
                    )
                ]) {
                    script {
                        sh '''
                        AWS_PASSWORD=$(aws ecr get-login-password --region eu-central-1)
                        ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" "$SSH_USER@3.75.239.152" "
                            echo $AWS_PASSWORD | docker login --username AWS --password-stdin 933060838752.dkr.ecr.eu-central-1.amazonaws.com
                            docker stop polybot && docker rm polybot;
                            docker pull 933060838752.dkr.ecr.eu-central-1.amazonaws.com/ploybot_sabaa2:latest
                            sudo docker run -d -p 8443:8443 --name polybot -v ~/.aws/:/root/.aws/:ro -v /home/ec2-user/PUBLIC.pem:/app/PUBLIC.pem 933060838752.dkr.ecr.eu-central-1.amazonaws.com/ploybot_sabaa2:latest
                        "
                        '''
                    }
                }
            }
        }
    }
}

#should add Generic Webhook Trigger plugin with change github webhook url by : http://admin:admin@18.153.251.133:8080/generic-webhook-trigger/invoke?

#t
#